18c18
< namespace Babel.ParserGenerator
---
> namespace QS._qss_p_.ParserGenerator_
87c87
< 						Console.Error.WriteLine("Next token is {0}", TerminalToString(next));
---
> 						Console.Error.WriteLine("Next token is {0}", _TerminalToString(next));
114c114
< 				Console.Error.Write("Shifting token {0}, ", TerminalToString(next));
---
> 				Console.Error.Write("Shifting token {0}, ", _TerminalToString(next));
217c217
<             errorMsg.AppendFormat("syntax error, unexpected {0}", TerminalToString(next));
---
>             errorMsg.AppendFormat("syntax error, unexpected {0}", _TerminalToString(next));
229c229
<                     errorMsg.Append(TerminalToString(terminal));
---
>                     errorMsg.Append(_TerminalToString(terminal));
312c312
<                         Console.Error.WriteLine("Next token is {0}", TerminalToString(next));
---
>                         Console.Error.WriteLine("Next token is {0}", _TerminalToString(next));
325c325
<                             Console.Error.WriteLine("Error: Discarding {0}", TerminalToString(next));
---
>                             Console.Error.WriteLine("Error: Discarding {0}", _TerminalToString(next));
347c347
<                     Console.Error.WriteLine("Error: panic discard of {0}", TerminalToString(next));
---
>                     Console.Error.WriteLine("Error: panic discard of {0}", _TerminalToString(next));
406a407,414
> 		private string _TerminalToString(int terminal)
> 		{
> 		 string _string;
> 		 if (QS._qss_p_.Parser_.Tokens_._TokenToString(terminal, out _string))
> 			 return _string;
> 		 else
> 			 return CharToString((char)terminal);
> 		}
413c421
< 				return TerminalToString(symbol);
---
> 				return _TerminalToString(symbol);
